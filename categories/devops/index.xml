<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Devops on Hugo Ivy</title>
    <link>/categories/devops/</link>
    <description>Recent content in Devops on Hugo Ivy</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 12 Dec 2017 19:20:00 +1100</lastBuildDate>
    
	<atom:link href="/categories/devops/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>APM tools</title>
      <link>/post/2017/12/12/apm-tools/</link>
      <pubDate>Tue, 12 Dec 2017 19:20:00 +1100</pubDate>
      
      <guid>/post/2017/12/12/apm-tools/</guid>
      <description>APM Application Performance Tools are crucial in monitoring the performance of applications
They give a better insight into the behaviour of your applications and are worth it.
New Relic is the most well known one but there are others in the market as well.
Example This the top 5 memory consumers of w3p processes in an IIS web server.
New Relic has something called an Apdex score
The Apdex score is a ratio value of the number of satisfied and tolerating requests to the total requests made.</description>
    </item>
    
    <item>
      <title>GIT and Vagrant</title>
      <link>/post/2017/08/06/git-and-vagrant/</link>
      <pubDate>Sun, 06 Aug 2017 21:57:42 +0000</pubDate>
      
      <guid>/post/2017/08/06/git-and-vagrant/</guid>
      <description>GIT GIT is a Distributed Version Control System Some commands are
create a new repository on the command line echo &amp;ldquo;# website&amp;rdquo; &amp;gt;&amp;gt; README.md
git init git add README.md git commit -m &amp;quot;first commit&amp;quot; git remote add origin https://github.com/Username/website.git git push -u origin master  or push an existing repository from the command line git remote add origin https://github.com/Username/website.git git push -u origin master  Vagrant Vagrant from HashiCorp is a good tool for spinning up environments and test.</description>
    </item>
    
    <item>
      <title>A Case for Software Load Balancing</title>
      <link>/post/2016/11/12/a-case-for-software-load-balancing/</link>
      <pubDate>Sat, 12 Nov 2016 19:20:00 +1100</pubDate>
      
      <guid>/post/2016/11/12/a-case-for-software-load-balancing/</guid>
      <description>You can runÂ software load balancers on commodity hardware. Plus virtualisation,containers like docker and tools like puppet and ansible help to leverage software load balancer to the maximum extent. Unless your requirement is really really big software load balancers should suffice. Nginx does a good job and you can go with Nginx plus for paid support,more features and peace of mind. There is good documentation on the Nginx website and so I will not be repeating the steps.</description>
    </item>
    
  </channel>
</rss>